openapi: 3.0.3
info:
  title: Django DRF Finance Tracker
  version: 0.0.0
paths:
  /api-token-auth/:
    post:
      operationId: api_token_auth_create
      tags:
      - api-token-auth
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/account/:
    get:
      operationId: api_account_list
      parameters:
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
          description: ''
    post:
      operationId: api_account_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
  /api/account/{id}/:
    get:
      operationId: api_account_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this account.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
    put:
      operationId: api_account_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this account.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
    patch:
      operationId: api_account_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this account.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAccount'
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
    delete:
      operationId: api_account_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this account.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/budget/:
    get:
      operationId: api_budget_list
      parameters:
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Budget'
          description: ''
    post:
      operationId: api_budget_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Budget'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Budget'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Budget'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Budget'
          description: ''
  /api/budget/{id}/:
    get:
      operationId: api_budget_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this budget.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Budget'
          description: ''
    put:
      operationId: api_budget_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this budget.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Budget'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Budget'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Budget'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Budget'
          description: ''
    patch:
      operationId: api_budget_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this budget.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBudget'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBudget'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBudget'
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Budget'
          description: ''
    delete:
      operationId: api_budget_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this budget.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/expense/:
    get:
      operationId: api_expense_list
      parameters:
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Expense'
          description: ''
    post:
      operationId: api_expense_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Expense'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Expense'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
  /api/expense/{id}/:
    get:
      operationId: api_expense_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this expense.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
    put:
      operationId: api_expense_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this expense.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Expense'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Expense'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
    patch:
      operationId: api_expense_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this expense.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExpense'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExpense'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExpense'
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
    delete:
      operationId: api_expense_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this expense.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/income/:
    get:
      operationId: api_income_list
      parameters:
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Income'
          description: ''
    post:
      operationId: api_income_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Income'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Income'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Income'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Income'
          description: ''
  /api/income/{id}/:
    get:
      operationId: api_income_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this income.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Income'
          description: ''
    put:
      operationId: api_income_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this income.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Income'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Income'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Income'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Income'
          description: ''
    patch:
      operationId: api_income_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this income.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedIncome'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedIncome'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedIncome'
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Income'
          description: ''
    delete:
      operationId: api_income_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this income.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/reminder/:
    get:
      operationId: api_reminder_list
      parameters:
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reminder'
          description: ''
    post:
      operationId: api_reminder_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reminder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reminder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reminder'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Reminder'
          description: ''
  /api/reminder/{id}/:
    get:
      operationId: api_reminder_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reminder.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Reminder'
          description: ''
    put:
      operationId: api_reminder_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reminder.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reminder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reminder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reminder'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Reminder'
          description: ''
    patch:
      operationId: api_reminder_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reminder.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReminder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReminder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReminder'
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Reminder'
          description: ''
    delete:
      operationId: api_reminder_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reminder.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/user/:
    get:
      operationId: api_user_list
      parameters:
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: api_user_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/user/{id}/:
    get:
      operationId: api_user_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_user_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_user_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_user_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 20
        dflt_curr_code:
          type: string
          title: Default currency code
      required:
      - dflt_curr_code
      - id
      - name
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    Budget:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        amount:
          type: integer
          maximum: 2147483647
          minimum: 0
        due_date:
          type: string
          format: date
        currency_code:
          type: string
        account:
          type: integer
        category:
          type: integer
          nullable: true
      required:
      - account
      - amount
      - currency_code
      - due_date
      - id
    Expense:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        amount:
          type: integer
          maximum: 2147483647
          minimum: 0
        comment:
          type: string
        photo:
          type: string
          format: uri
        date:
          type: string
          format: date
          readOnly: true
        currency_code:
          type: string
        account:
          type: integer
        category:
          type: integer
      required:
      - account
      - amount
      - category
      - currency_code
      - date
      - id
    FrequencyEnum:
      enum:
      - 0
      - 1
      - 7
      - 14
      type: integer
      description: |-
        * `0` - None
        * `1` - Daily
        * `7` - Weekly
        * `14` - Biweekly
    Income:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        amount:
          type: integer
          maximum: 2147483647
          minimum: 0
        comment:
          type: string
        photo:
          type: string
          format: uri
        date:
          type: string
          format: date
          readOnly: true
        currency_code:
          type: string
        account:
          type: integer
        category:
          type: integer
      required:
      - account
      - amount
      - category
      - currency_code
      - date
      - id
    PatchedAccount:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 20
        dflt_curr_code:
          type: string
          title: Default currency code
    PatchedBudget:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        amount:
          type: integer
          maximum: 2147483647
          minimum: 0
        due_date:
          type: string
          format: date
        currency_code:
          type: string
        account:
          type: integer
        category:
          type: integer
          nullable: true
    PatchedExpense:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        amount:
          type: integer
          maximum: 2147483647
          minimum: 0
        comment:
          type: string
        photo:
          type: string
          format: uri
        date:
          type: string
          format: date
          readOnly: true
        currency_code:
          type: string
        account:
          type: integer
        category:
          type: integer
    PatchedIncome:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        amount:
          type: integer
          maximum: 2147483647
          minimum: 0
        comment:
          type: string
        photo:
          type: string
          format: uri
        date:
          type: string
          format: date
          readOnly: true
        currency_code:
          type: string
        account:
          type: integer
        category:
          type: integer
    PatchedReminder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        date_time:
          type: string
          format: date-time
        frequency:
          allOf:
          - $ref: '#/components/schemas/FrequencyEnum'
          minimum: 0
          maximum: 2147483647
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          readOnly: true
          title: Staff status
          description: Designates whether the user can log into this admin site.
        password:
          type: string
          writeOnly: true
          maxLength: 128
        password2:
          type: string
          writeOnly: true
    Reminder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        date_time:
          type: string
          format: date-time
        frequency:
          allOf:
          - $ref: '#/components/schemas/FrequencyEnum'
          minimum: 0
          maximum: 2147483647
      required:
      - date_time
      - frequency
      - id
      - text
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          readOnly: true
          title: Staff status
          description: Designates whether the user can log into this admin site.
        password:
          type: string
          writeOnly: true
          maxLength: 128
        password2:
          type: string
          writeOnly: true
      required:
      - id
      - is_staff
      - password
      - password2
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
